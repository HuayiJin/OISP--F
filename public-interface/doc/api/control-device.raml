displayName: <h2> Control Device API </h2>
uriParameters:
  accountId:
    description: |
      The ID of an Account. In order to obtain the Account Id, we need first obtain an Authorization Token and then get the Authorization Token Info
    example: 321ef007-8449-477f-9ea0-d702d77e64b9
post:
  description: |
    **Send actuation command**

    Send actuation command to the device for specific component (actuator)
  is: [ authorization-header, response-errors-complex-command, response-errors-actuation, response-errors-generic ]
  body:
    type: !include build/command_POST.json
    example: |
      {
        "commands":
          [
          {
            "componentId":"775c80a5-3313-2221-9028-47da015fdf51",
            "parameters":
              [
              {
                "name":"LED",
                "value":"1"
              }
              ],
              "transport": "either mqtt or ws"
            }
            ],
            "complexCommands": [ "complexCommandName" ]  
          }
  responses:
    200:
      description: OK
/{commandName}:
  uriParameters:
    commandName:
      description: Name for command to be created
      example: FlashingLight
  post:
    description: |
      **Save complex command**

      Saves multiple simple commands as a complex one which can be later executed as one.
    is: [ authorization-header, response-errors-complex-command, response-errors-actuation, response-errors-generic ]
    body:
      type: !include build/command_POST.json
      example: |
        {
          "commands": [
          {
            "componentId":"07db2660-2a86-4425-b9b6-59554f734b41",
            "transport":"ws",
            "parameters": [ 
            {"name":"LED","value":"1"},
            {"name":"LED","value":"0"},
            {"name":"LED","value":"1"},
            {"name":"LED","value":"0"},
            {"name":"LED","value":"1"}
            ]
          }
          ]
        }
    responses:
      200:
        description: OK
/devices/{deviceId}:
  uriParameters:
    deviceId:
      description: The ID of a Device
      example: 24-a5-80-21-5b-29
  get:
    description: |
      **Get list of actuations**

      Get list of actuation commands, which was send to the device. By default method returns list of actuations from last 24 hours. There is possibility to get list of actuations from specific period of time, by adding from and to parameters to the url request (see "from and to" paragraph below).

      **from and to**

      * If the `to` key is omitted, data will be retrieved up to the current time.

      * If the `from` key is omitted, from will default to currentTime minus 24 hours. If `from` is positive it will represent the number of milliseconds since Jan-01-1970T00:00:00.000. However, if `from` is negative, it represents the number of seconds to add to `to` (because the number is negative, it will decrease `to`, moving backward in time.

      * There is no way to receive actuations, which were send to device before 24 hours. Only actuations from last 24 hours are stored in application database.

      Here are some examples:

        |from|to|meaning|
        |:--:|:-:|-------|
        | 0 | missing | Return all data available |
        | -86400 | missing | return all data with timestamps in the last 24 hours (86,400 seconds) |
        | 1407979291000 | 1407980711000 | return all observations with timestamps between 2014-08-13T18:21:31.000 UTC and 2014-08-13T18:45:11.000 UTC |
    is: [ authorization-header, response-errors-complex-command, response-errors-actuation, response-errors-generic ]
    queryParameters:
      from:
        description: Beginning of the time window in miliseconds
        required: false
        example: 0
        type: integer
      to:
        description: End of the time window in miliseconds
        required: false
        example: 1407979291860
        type: integer
    responses:
      200:
        body:
          example:
            [
            {
              "created": "2015-02-02T08:45:58.776Z",
              "deviceId": "24-a5-80-21-5b-29",
              "componentId": "1f433537-a9ef-4a80-9b61-505e7c5299ac",
              "command": "LED.v1.0",
              "params": [
              {
                "name": "LED",
                "value": "1"
              }
              ],
              "accountId": "ed6c80f7-1914-4d21-bc26-47d0bb5fdf4d",
              "id": "54cf3946e92e91d7c8a9f6c6"
            }
            ]